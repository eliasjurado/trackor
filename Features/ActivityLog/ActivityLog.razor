@page "/activitylog"
@using Trackor.Features.ActivityLog.Model
@inherits FluxorComponent

@inject IState<ActivityLogState> ActivityLogState
@inject IDispatcher Dispatcher

<PageTitle>Activity Log</PageTitle>

<MudText Typo="Typo.h4" GutterBottom="true">
    <MudIcon Icon="@Icons.Material.Filled.EventAvailable" />
    Activity Log
</MudText>

@if (ActivityLogState.Value.IsLoaded)
{
    <MudTable Items="@Items" Hover="true">
        <HeaderContent>
            <MudTh>Id</MudTh>
            <MudTh>Title</MudTh>
            <MudTh>Narrative</MudTh>
            <MudTh>Date</MudTh>
            <MudTh>Duration</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Id">@context.Id</MudTd>
            <MudTd DataLabel="Title">@context.Title</MudTd>
            <MudTd DataLabel="Narrative">@context.Narrative</MudTd>
            <MudTd DataLabel="Date">@context.Date</MudTd>
            <MudTd DataLabel="Duration">@context.Duration</MudTd>
        </RowTemplate>
    </MudTable>
}
else
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}

@code {
    private ActivityLogItem[] Items => ActivityLogState.Value.ActivityLogItems;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        if (!ActivityLogState.Value.IsLoaded)
        {
            Dispatcher.Dispatch(new ActivityLogLoadAction());
        }
    }

}
