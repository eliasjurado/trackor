@inherits FluxorComponent

@inject IDispatcher Dispatcher
@inject IState<ProjectsState> ProjectsState

<MudTable Items="@ProjectsState.Value.Projects" Hover="true" Elevation="6">
    <ColGroup>
        <col style="width: 70%;" />
        <col style="width: 15%;" />
        <col style="width: 15%;" />
    </ColGroup>
    <HeaderContent>
        <MudTh>Title</MudTh>
        <MudTh>Active</MudTh>
        <MudTh Style="text-align:center"><MudIcon Icon="@Icons.Filled.Construction"></MudIcon></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Title">@context.Title</MudTd>
        <MudTd DataLabel="Active">
            <ActiveInactiveLabel IsActive="context.Active" />
        </MudTd>
        <MudTd>
            <MudIconButton Icon="@Icons.Filled.Delete" Color="Color.Error" OnClick="() => DeleteProject(context)" Title="Delete"></MudIconButton>
            <MudIconButton Icon="@Icons.Filled.ContentCopy" OnClick="() => EditProject(context, copyOnly: true)" Title="Copy as New"></MudIconButton>
            <MudIconButton Icon="@Icons.Filled.Edit" OnClick="() => EditProject(context)" Title="Edit"></MudIconButton>
        </MudTd>
    </RowTemplate>
</MudTable>

@code {

    private void EditProject(Project project, bool copyOnly = false)
    {
        Dispatcher.Dispatch(new ProjectsEditProjectAction(project, copyOnly));
    }

    private void DeleteProject(Project project)
    {
        Dispatcher.Dispatch(new ProjectsDeleteAction(project));
    }
}
