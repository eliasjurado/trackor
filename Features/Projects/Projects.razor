@page "/projects"
@inherits FluxorComponent

@inject IState<ProjectsState> ProjectsState
@inject IDispatcher Dispatcher

<PageTitle>Trackor - Projects</PageTitle>

<MudText Typo="Typo.h4" GutterBottom="true">
    <MudIcon Icon="@Icons.Material.Filled.EventAvailable" />
    Projects
</MudText>

<MudPaper Class="pa-3 mb-3" Elevation="6">
    <MudForm @bind-IsValid="@formIsValid">
        <MudTextField @ref="projectFieldRef" T="string" Label="Project Title" @bind-Value="projectTitle" Immediate="true" AutoFocus="true" Required="true" OnKeyUp="OnKeyUp" RequiredError="Project Title is required" />
        <div class="d-flex align-center justify-space-between mt-6">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!formIsValid)" OnClick="AddNewProject" Class="ml-auto">Add</MudButton>
        </div>
    </MudForm>
</MudPaper>

@if (ProjectsState.Value.Projects.Any())
{
    <MudTable Items="@ProjectsState.Value.Projects" Hover="true" Elevation="6">
        <HeaderContent>
            <MudTh>Id</MudTh>
            <MudTh>Title</MudTh>
            <MudTh>Active</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Id">@context.Id</MudTd>
            <MudTd DataLabel="Title">@context.Title</MudTd>
            <MudTd DataLabel="Active">@context.Active</MudTd>
        </RowTemplate>
    </MudTable>
}

@code {
    string projectTitle;
    bool formIsValid;
    MudTextField<string> projectFieldRef;

    protected override void OnInitialized()
    {
        if (!ProjectsState.Value.Projects.Any())
        {
            Dispatcher.Dispatch(new ProjectsLoadAction());
        }

        base.OnInitialized();
    }

    private async Task OnKeyUp(KeyboardEventArgs args)
    {
        if (args.Key == "Enter" && formIsValid)
        {
            await AddNewProject();
        }
    }

    private async Task AddNewProject()
    {
        var newProject = new Project
        {
            Title = projectTitle,
            Active = true
        };

        Dispatcher.Dispatch(new ProjectsSaveAction(newProject));
        projectTitle = string.Empty;
        await projectFieldRef.FocusAsync();
    }
}
